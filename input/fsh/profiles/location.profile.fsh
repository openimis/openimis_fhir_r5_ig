// This is the profile for openIMIS Location 
// Mapping is done throught Location openIMIS entities
Profile: OpenIMISLocation
Parent: Location
Id: openimis-location
Title: "openIMIS Location"
Description: "Defines a Location for openIMIS which maps to a Location"

* id
  * ^short = "Location UUID"
  * ^definition = "Location UUID generated by openIMIS."

* identifier 1..* MS // Must contain at least the Location Code
  * type 1..1  
  * value 1..1
* identifier.type.coding.code from OpenIMISIdentifierVS (required)
* identifier ^slicing.discriminator.type = #value
* identifier ^slicing.discriminator.path = "type.coding.code"
* identifier ^slicing.rules = #closed
* identifier contains
    Code 1..1 MS and
    UUID 0..1 
* identifier[Code].type.coding.code = OpenIMISIdentifierCS#Code // it is mapped to CHFID
  * ^short = "Location openIMIS Code"
  * ^definition = "Location Code managed by openIMIS."
* identifier[UUID].type.coding.code = OpenIMISIdentifierCS#UUID
  * ^short = "Location openIMIS UUID"
  * ^definition = "Location UUID generated by openIMIS."

* status 0..1 
  * ^short = "Active Status"
  * ^definition = "The location is always active."
* status = LocationStatusCS#active "Active"

* operationalStatus 0..0

* name 1..1 MS // The name by which the Location is known
  * ^short = "Location official name"
  * ^definition = "Location official family and given names."

* alias 0..0
* description 0..0
* mode = LocationModeCS#instance "Instance"
* type 0..0
// * telecom 0..0 // REMOVED: telecom is moved under Location.contact.telecom in R5 
* address 0..0 

// PhysicalType is removed in R5 and renamed to form
// * physicalType 1..1 MS 
//   * ^short = "Location type"
//   * ^definition = "Location type specifying the level of location."
// * physicalType from LocationTypeVS (required)

* form 1..1 MS
  * ^short = "Location type"
  * ^definition = "Location type specifying the level of location."
* form from LocationTypeVS (required)

* position 0..0
* managingOrganization 0..0

* partOf 0..1 MS
* partOf only Reference(OpenIMISLocation)

* hoursOfOperation 0..0
// * availabilityExceptions 0..0 // REMOVED: Removed and moved to Location.hoursOfOperation.notAvailable.description
* endpoint 0..0