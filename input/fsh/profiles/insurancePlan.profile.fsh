// Profile for openIMIS InsurancePlan
Profile: OpenIMISInsurancePlan
Parent: InsurancePlan
Id: openimis-insurance-plan
Title: "openIMIS Insurance Plan"
Description: "Defines an Insurance Plan for openIMIS which maps to a Product."

// -------------------------------------------------------------------------------------
// Identifiers
// -------------------------------------------------------------------------------------
* id
  * ^short = "Insurance Plan UUID"
  * ^definition = "Insurance Plan UUID generated by openIMIS."

* identifier 1..* MS
  * type 1..1
  * value 1..1
* identifier.type.coding.code from OpenIMISIdentifierVS (required)

* identifier
  * ^slicing.discriminator.type = #value
  * ^slicing.discriminator.path = "type.coding.code"
  * ^slicing.rules = #closed
* identifier contains
    Code 1..1 MS and
    UUID 0..1

* identifier[Code].type.coding.code = OpenIMISIdentifierCS#Code
  * ^short = "Insurance Plan openIMIS Code"
  * ^definition = "Product Code managed by openIMIS."

* identifier[UUID].type.coding.code = OpenIMISIdentifierCS#UUID
  * ^short = "Insurance Plan openIMIS UUID"
  * ^definition = "Product UUID generated by openIMIS."

// -------------------------------------------------------------------------------------
// Basic fields
// -------------------------------------------------------------------------------------
* status 1..1
* status from InsurancePlanPublicationStatusVS (required)

* type 1..1
* type from InsurancePlanCoverageTypeVS (required)
  * ^short = "Type of Insurance Plan"
  * ^definition = """
  Defines the type of Insurance Plan.
  Currently only medical is managed. Can have other values in the future."""

* name 1..1
* alias 0..0

* period 1..1
  * start 1..1
    * ^short = "Insurance Plan start date"
    * ^definition = "Date from which the Product is valid."
  * end 1..1
    * ^short = "Insurance Plan end date"
    * ^definition = "Date to which the Product is valid."

* ownedBy 0..0
* administeredBy 0..0

* coverageArea 1..1
* coverageArea only Reference(OpenIMISLocation)

* contact 0..0
* endpoint 0..0
* network 0..0

// -------------------------------------------------------------------------------------
// Coverage + Benefits + Limits
// -------------------------------------------------------------------------------------
* coverage 1..1
  * type from InsurancePlanCoverageTypeVS (required)
  * network 0..0
  * benefit 1..1
    * type from InsurancePlanCoverageTypeVS (required)
    * requirement 0..0

    * limit 1..2
      * code 1..1
      * code from InsurancePlanCoverageBenefitLimitVS (required)

    * limit
      * ^slicing.discriminator.type = #value
      * ^slicing.discriminator.path = "code.coding.code"
      * ^slicing.rules = #closed
      * ^slicing.ordered = false

    * limit contains
        period 1..1 and
        memberCount 0..1

    // PERIOD limit = months
    * limit[period]
      * code.coding.code = #period (exactly)
      * code = InsurancePlanCoverageBenefitLimitCS#period "Period"
      * value 1..1
      * value
        * value 1..1
        * system = "http://unitsofmeasure.org"
        * code = #mo
        * unit = "months"
      * value
        * ^short = "Insurance Period (months)"
        * ^definition = "Number of months the Insuree is covered. Mapped to `insurancePeriod`."

    // MEMBER COUNT limit = plain count
    * limit[memberCount]
      * code.coding.code = #memberCount (exactly)
      * code = InsurancePlanCoverageBenefitLimitCS#memberCount "Member Count"
      * value 1..1
      * value
        * value 1..1
        * system = "http://unitsofmeasure.org"
        * code = #1
        * unit = "member"
      * value
        * ^short = "Member Count"
        * ^definition = "Max number of members of a household/group for the product. Mapped to `memberCount`."

// -------------------------------------------------------------------------------------
// Plan costs
// -------------------------------------------------------------------------------------
* plan 1..1
  * identifier 0..0
  * type 0..0
  * coverageArea 0..0
  * network 0..0

  * generalCost 1..*
    * type 1..1
    * type from InsurancePlanGeneralCostTypeVS (required)
    * cost 1..1
    * comment 0..0

  * generalCost
    * ^slicing.discriminator.type = #value
    * ^slicing.discriminator.path = "type.coding.code"
    * ^slicing.rules = #closed
    * ^slicing.ordered = false

  * generalCost contains
      lumpsum 1..1 and
      premiumAdult 0..1 and
      premiumChild 0..1 and
      registrationLumpsum 0..1 and
      registrationFee 0..1 and
      generalAssemblyLumpSum 0..1 and
      generalAssemblyFee 0..1

  * generalCost[lumpsum]
    * type.coding.code = #lumpsum (exactly)
    * type = InsurancePlanGeneralCostTypeCS#lumpsum "Lumpsum"
    * groupSize 1..1
    * groupSize
      * ^short = "Threshold Member"
      * ^definition = "Number of members in group that are covered."

  * generalCost[premiumAdult]
    * type.coding.code = #premiumAdult (exactly)
    * type = InsurancePlanGeneralCostTypeCS#premiumAdult "Premium Adult"
    * groupSize 0..0

  * generalCost[premiumChild]
    * type.coding.code = #premiumChild (exactly)
    * type = InsurancePlanGeneralCostTypeCS#premiumChild "Premium Child"
    * groupSize 0..0

  * generalCost[registrationLumpsum]
    * type.coding.code = #registrationLumpsum (exactly)
    * type = InsurancePlanGeneralCostTypeCS#registrationLumpsum "Registration Lumpsum"
    * groupSize 0..0

  * generalCost[registrationFee]
    * type.coding.code = #registrationFee (exactly)
    * type = InsurancePlanGeneralCostTypeCS#registrationFee "Registration Fee"
    * groupSize 0..0

  * generalCost[generalAssemblyLumpSum]
    * type.coding.code = #generalAssemblyLumpSum (exactly)
    * type = InsurancePlanGeneralCostTypeCS#generalAssemblyLumpSum "General Assembly Lump Sum"
    * groupSize 0..0

  * generalCost[generalAssemblyFee]
    * type.coding.code = #generalAssemblyFee (exactly)
    * type = InsurancePlanGeneralCostTypeCS#generalAssemblyFee "General Assembly Fee"
    * groupSize 0..0

  * specificCost 0..0

// -------------------------------------------------------------------------------------
// Extensions (top-level): slice by URL
// -------------------------------------------------------------------------------------
* extension
  * ^slicing.discriminator[0].type = #value
  * ^slicing.discriminator[0].path = "url"
  * ^slicing.rules = #open
  * ^slicing.ordered = false

* extension contains
    InsurancePlanConversionExtension      named conversion       0..1 and
    InsurancePlanMaxInstallmentsExtension named maxInstallments  1..1 and
    InsurancePlanStartCycleExtension      named startCycle       0..4 and
    InsurancePlanPeriodExtension          named period           0..* and
    InsurancePlanDiscountExtension        named discount         0..*

// Descriptions for single-URL slices
* extension[conversion]
  * ^short = "Conversion Product"
  * ^definition = "Reference to the product which replaces the current product in case of renewal after the period end."

* extension[maxInstallments]
  * ^short = "Max Installments"
  * ^definition = "Maximal number of instalments in which contributions for a policy may be paid."

* extension[startCycle]
  * ^short = "Start Cycle"
  * ^definition = "If one or more starting dates (day+month) of a cycle are specified, the product has fixed enrolment dates. Activation of underwritten and renewed policies happens only on those fixed dates (max four)."

* extension[period]
  * ^short = "Period"
  * ^definition = "Defines various period types (administration, grace periods) in months."

* extension[discount]
  * ^short = "Discount" 
  * ^definition = "Defines discount settings for enrolment and renewal."
